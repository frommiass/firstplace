#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SubmitModelWithMemory –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –¥–∏–∞–ª–æ–≥–µ.
"""

from src.submit import SubmitModelWithMemory
from src.submit.interfaces import Message

def test_model():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º –¥–∏–∞–ª–æ–≥–µ."""
    
    print("="*80)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SubmitModelWithMemory")
    print("="*80)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
    print("\n[1/4] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏...")
    try:
        model = SubmitModelWithMemory(
            model_path="path/to/gigachat",
            weights_dir="./src/submit/weights"
        )
        print("‚úÖ –ú–æ–¥–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    print("\n[2/4] –í—Ä–µ–º—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞...")
    messages = [
        Message("user", "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ò–≤–∞–Ω"),
        Message("assistant", "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –ò–≤–∞–Ω!"),
        Message("user", "–ú–Ω–µ 30 –ª–µ—Ç"),
        Message("assistant", "–ü–æ–Ω—è—Ç–Ω–æ, –ò–≤–∞–Ω—É 30 –ª–µ—Ç. –ö–∞–∫ –¥–µ–ª–∞?"),
        Message("user", "–•–æ—Ä–æ—à–æ, —Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º")
    ]
    
    try:
        model.write_to_memory(messages, "test_dialogue")
        print("‚úÖ –î–∏–∞–ª–æ–≥ –∑–∞–ø–∏—Å–∞–Ω –≤ –ø–∞–º—è—Ç—å!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ø–∞–º—è—Ç—å: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤
    print("\n[3/4] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤...")
    
    test_questions = [
        "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?",
        "–°–∫–æ–ª—å–∫–æ –º–Ω–µ –ª–µ—Ç?",
        "–ß–µ–º —è –∑–∞–Ω–∏–º–∞—é—Å—å?",
        "–ß—Ç–æ —è —Å–∫–∞–∑–∞–ª –æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ?"
    ]
    
    for i, question in enumerate(test_questions, 1):
        print(f"\n  –í–æ–ø—Ä–æ—Å {i}: {question}")
        try:
            answer = model.answer_to_question("test_dialogue", question)
            print(f"  –û—Ç–≤–µ—Ç: {answer}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n[4/4] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    try:
        stats = model.data_processor.get_stats()
        print(f"  ‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –¥–ª–∏–Ω–Ω—ã—Ö: {stats['filtered_too_long']}")
        print(f"  ‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {stats['filtered_assistant']}")
        print(f"  ‚úÖ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {stats.get('total_chunks_processed', 0)}")
        print(f"  ‚úÖ –î–∏–∞–ª–æ–≥–æ–≤ –≤ –ø–∞–º—è—Ç–∏: {len(model.data_processor.dialogue_chunks)}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    print("\n" + "="*80)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("="*80)
    
    return True


if __name__ == "__main__":
    test_model()
